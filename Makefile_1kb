# Makefile for SHA256 1KB Processor Simulation

# Verilator settings
VERILATOR = verilator
VERILATOR_FLAGS = -Wall -Wno-WIDTHTRUNC -Wno-WIDTHEXPAND -Wno-UNSIGNED -Wno-EOFNEWLINE -Wno-DECLFILENAME -Wno-UNUSEDPARAM -Wno-INFINITELOOP --no-timing --cc --exe --build --trace

# Source files
VERILOG_SOURCES = sha256_1kb_processor.v sha256_1kb_processor_tb.v
VERILOG_DIRECT_SOURCES = sha256_1kb_processor.v
CPP_SOURCES = sha256_1kb_sim_main.cpp
CPP_DIRECT_SOURCES = sha256_1kb_sim_main_direct.cpp

# Output executable
EXECUTABLE = sha256_1kb_sim
EXECUTABLE_DIRECT = sha256_1kb_sim_direct

# Default target
all: $(EXECUTABLE_DIRECT)

# Build the direct simulation (recommended)
$(EXECUTABLE_DIRECT): $(VERILOG_DIRECT_SOURCES) $(CPP_DIRECT_SOURCES)
	@echo "Building SHA256 1KB processor direct simulation..."
	$(VERILATOR) $(VERILATOR_FLAGS) -top-module sha256_1kb_processor \
		$(VERILOG_DIRECT_SOURCES) $(CPP_DIRECT_SOURCES) -o $(EXECUTABLE_DIRECT)
	@echo "Build complete!"

# Build the testbench simulation
$(EXECUTABLE): $(VERILOG_SOURCES) $(CPP_SOURCES)
	@echo "Building SHA256 1KB processor simulation..."
	$(VERILATOR) $(VERILATOR_FLAGS) -top-module sha256_1kb_processor_tb \
		$(VERILOG_SOURCES) $(CPP_SOURCES) -o $(EXECUTABLE)
	@echo "Build complete!"

# Run the direct simulation (recommended)
run: $(EXECUTABLE_DIRECT)
	@echo "Running SHA256 1KB processor direct simulation..."
	./obj_dir/$(EXECUTABLE_DIRECT)
	@echo "Simulation complete!"

# Run the testbench simulation
run-tb: $(EXECUTABLE)
	@echo "Running SHA256 1KB processor simulation..."
	./obj_dir/$(EXECUTABLE)
	@echo "Simulation complete!"

# Generate expected hash for verification
verify:
	@echo "Generating expected SHA256 hash for verification..."
	@python3 -c "import hashlib; data = bytes(range(256)) * 4; print('Expected SHA256:', hashlib.sha256(data).hexdigest())"

# View waveform (requires GTKWave)
wave:
	@if [ -f sha256_1kb_waveform.vcd ]; then \
		echo "Opening waveform in GTKWave..."; \
		gtkwave sha256_1kb_waveform.vcd; \
	else \
		echo "No waveform file found. Run 'make run' first."; \
	fi

# Clean build artifacts
clean:
	rm -rf obj_dir/
	rm -f sha256_1kb_waveform.vcd
	@echo "Clean complete!"

# Help
help:
	@echo "Available targets:"
	@echo "  all     - Build the direct simulation (default)"
	@echo "  run     - Build and run the direct simulation (recommended)"
	@echo "  run-tb  - Build and run the testbench simulation"
	@echo "  verify  - Generate expected SHA256 hash for verification"
	@echo "  wave    - View waveform in GTKWave"
	@echo "  clean   - Clean build artifacts"
	@echo "  help    - Show this help message"

.PHONY: all run run-tb verify wave clean help 