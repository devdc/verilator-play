`begin_keywords "1800-2023"
`line 1 "sha256_processor_tb.v" 1
`timescale 1ns/1ps
/*verilator lint_off UNUSED*/ 
/*verilator lint_off UNDRIVEN*/ 
/*verilator lint_off WIDTH*/ 
/*verilator lint_off STMTDLY*/ 
/*verilator lint_off CASEINCOMPLETE*/ 
/*verilator lint_off WIDTHEXPAND*/ 
/*verilator lint_off BLKSEQ*/ 
/*verilator lint_off LATCH*/ 

`line 11 "sha256_processor_tb.v" 0
module sha256_processor_tb(
    input wire ext_clk,
    output reg test_complete,
    output reg test_passed
);

`line 17 "sha256_processor_tb.v" 0
    wire clk;
    reg rst = 0;
    reg start = 0;
    reg [7:0] data_in;
    reg data_valid = 0;
    reg data_last = 0;
    wire [255:0] hash_out;
    wire done;

`line 26 "sha256_processor_tb.v" 0
     
    assign clk = ext_clk;

`line 29 "sha256_processor_tb.v" 0
     
     
    localparam FILE_SIZE = 64;

`line 33 "sha256_processor_tb.v" 0
     
    sha256_processor uut (
        .clk(clk),
        .rst(rst),
        .start(start),
        .data_in(data_in),
        .data_valid(data_valid),
        .data_last(data_last),
        .hash_out(hash_out),
        .done(done)
    );

`line 45 "sha256_processor_tb.v" 0
    integer i;

`line 47 "sha256_processor_tb.v" 0
     
     
    localparam [255:0] EXPECTED_HASH = 256'hffe054fe7ae0cb6dc65c3af9b61d5209f439851db43d0ba5997337df154668eb;

`line 51 "sha256_processor_tb.v" 0
    initial begin
         
        test_complete = 0;
        test_passed = 0;
        
         
        rst = 1;
        data_in = 0;
        data_valid = 0;
        data_last = 0;
        start = 0;
        
        $display("Starting SHA-256 processor testbench");
        $display("Waiting for clock to start...");
        
         
        repeat(3) @(posedge clk);
        $display("Clock detected, starting reset sequence...");
        
         
        rst = 1;
        repeat(4) @(posedge clk);   
        
        rst = 0;
        repeat(2) @(posedge clk);   
        
        start = 1;
        @(posedge clk);            
        start = 0;
        @(posedge clk);            
        
        $display("Reset sequence complete, starting to feed data...");
        $display("Feeding %0d bytes of 'a' characters...", FILE_SIZE);

`line 85 "sha256_processor_tb.v" 0
         
        for (i = 0; i < FILE_SIZE; i = i + 1) begin
            @(negedge clk);
            data_in = 8'h61;  
            data_valid = 1;
            data_last = (i == FILE_SIZE - 1);
            @(negedge clk);
            data_valid = 0;
            data_last = 0;
            
             
            if ((i % 16) == 0) begin
                $display("Progress: %0d/%0d bytes processed", i, FILE_SIZE);
            end
        end

`line 101 "sha256_processor_tb.v" 0
        $display("Data input complete, waiting for processing...");

`line 103 "sha256_processor_tb.v" 0
         
        wait (done);

`line 106 "sha256_processor_tb.v" 0
        $display("Processing complete!");

`line 108 "sha256_processor_tb.v" 0
         
        if (hash_out == EXPECTED_HASH) begin
            $display("✓ Test PASSED: Hash output matches expected value");
            $display("Hash: %h", hash_out);
            test_passed = 1;
        end else begin
            $display("✗ Test FAILED");
            $display("Expected: %h", EXPECTED_HASH);
            $display("Got     : %h", hash_out);
            test_passed = 0;
        end
        
        test_complete = 1;
        repeat(10) @(posedge clk);   
        $finish;
    end

`line 125 "sha256_processor_tb.v" 0
     
    initial begin
        #1000000;  
        $display("Simulation timeout - test did not complete in time!");
        test_complete = 1;
        test_passed = 0;
        $finish;
    end

`line 134 "sha256_processor_tb.v" 0
endmodule

`line 136 "sha256_processor_tb.v" 0
