`begin_keywords "1800-2023"
`line 1 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 1
 

`line 3 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
 

`line 5 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
 

`line 7 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
 
 
 
 

`line 12 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
 
 
 
 
 
 
 
 
 
 
 
 

`line 25 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
/*verilator lint_off DECLFILENAME*/ 
/*verilator lint_off TIMESCALEMOD*/ 
/*verilator lint_off UNUSEDSIGNAL*/ 
package std;
   class mailbox #(type T);
      protected int m_bound;
      protected T m_queue[$];

`line 33 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function new(int bound = 0);
         m_bound = bound;
      endfunction

`line 37 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function int num();
         return m_queue.size();
      endfunction

`line 41 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      task put(T message);
 
         while (m_bound != 0 && m_queue.size() >= m_bound)
            wait (m_queue.size() < m_bound);
         m_queue.push_back(message);

`line 47 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      endtask

`line 49 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function int try_put(T message);
         if (m_bound == 0 || num() < m_bound) begin
            m_queue.push_back(message);
            return 1;
         end
         return 0;
      endfunction

`line 57 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      task get(ref T message);
 
         while (m_queue.size() == 0) begin
            wait (m_queue.size() > 0);
         end
         message = m_queue.pop_front();

`line 64 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      endtask

`line 66 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function int try_get(ref T message);
         if (num() > 0) begin
            message = m_queue.pop_front();
            return 1;
         end
         return 0;
      endfunction

`line 74 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      task peek(ref T message);
 
         while (m_queue.size() == 0) begin
            wait (m_queue.size() > 0);
         end
         message = m_queue[0];

`line 81 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      endtask

`line 83 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function int try_peek(ref T message);
         if (num() > 0) begin
            message = m_queue[0];
            return 1;
         end
         return 0;
      endfunction
   endclass

`line 92 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
   class semaphore;
      protected int m_keyCount;

`line 95 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function new(int keyCount = 0);
         m_keyCount = keyCount;
      endfunction

`line 99 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function void put(int keyCount = 1);
         m_keyCount += keyCount;
      endfunction

`line 103 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      task get(int keyCount = 1);
 
         while (m_keyCount < keyCount) begin
            wait (m_keyCount >= keyCount);
         end
         m_keyCount -= keyCount;

`line 110 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      endtask

`line 112 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function int try_get(int keyCount = 1);
         if (m_keyCount >= keyCount) begin
            m_keyCount -= keyCount;
            return 1;
         end
         return 0;
      endfunction
   endclass

`line 121 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
   class process;
      typedef enum {
         FINISHED  = 0,
         RUNNING   = 1,
         WAITING   = 2,
         SUSPENDED = 3,
         KILLED    = 4
      } state;

`line 130 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
 
       
      protected chandle m_process;


`line 135 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      static function process self();
         process p = new;
 
         $c(p.m_process, " = vlProcess;");

`line 140 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
         return p;
      endfunction

`line 143 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      protected function void set_status(state s);
 
         $c(m_process, "->state(", s, ");");

`line 147 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      endfunction

`line 149 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function state status();
 
         return state'($c(m_process, "->state()"));

`line 153 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
          

`line 155 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      endfunction

`line 157 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function void kill();
         set_status(KILLED);
      endfunction

`line 161 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function void suspend();
         $error("std::process::suspend() not supported");
      endfunction

`line 165 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function void resume();
         set_status(RUNNING);
      endfunction

`line 169 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      task await();
 
         wait (status() == FINISHED || status() == KILLED);

`line 173 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      endtask

`line 175 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
       
       
       
      
       
       

`line 182 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
       
       
       
       
      function string get_randstate();
         string s;

`line 189 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
         s.itoa($random);   
         set_randstate(s);   
         return s;
      endfunction

`line 194 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
      function void set_randstate(string s);
         $urandom(s.atoi());   
      endfunction
   endclass
   function int randomize();
      randomize = 0;
   endfunction
endpackage

`line 203 "/opt/homebrew/Cellar/verilator/5.028/share/verilator/include/verilated_std.sv" 0
